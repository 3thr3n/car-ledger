{
  "openapi" : "3.1.0",
  "components" : {
    "schemas" : {
      "AccountPojo" : {
        "type" : "object",
        "properties" : {
          "maxCars" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "AverageStats" : {
        "type" : "object",
        "properties" : {
          "pricePerUnit" : {
            "type" : "number"
          },
          "distance" : {
            "type" : "number"
          },
          "calculated" : {
            "type" : "number"
          },
          "calculatedPrice" : {
            "type" : "number"
          }
        }
      },
      "BillInputPojo" : {
        "type" : "object",
        "properties" : {
          "day" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "distance" : {
            "type" : "number"
          },
          "unit" : {
            "type" : "number"
          },
          "pricePerUnit" : {
            "type" : "number"
          },
          "estimate" : {
            "type" : "number"
          }
        }
      },
      "BillPojo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "day" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "distance" : {
            "type" : "number"
          },
          "unit" : {
            "type" : "number"
          },
          "pricePerUnit" : {
            "type" : "number"
          },
          "estimate" : {
            "type" : "number"
          },
          "calculated" : {
            "type" : "number"
          },
          "calculatedPrice" : {
            "type" : "number"
          }
        }
      },
      "BillPojoPaged" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BillPojo"
            }
          }
        }
      },
      "CarInputPojo" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          }
        }
      },
      "CarPojo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "amountBills" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Credentials" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "CsvOrder" : {
        "type" : "object",
        "properties" : {
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pricePerUnit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "distance" : {
            "type" : "integer",
            "format" : "int32"
          },
          "estimate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "HiLo" : {
        "type" : "object",
        "properties" : {
          "min" : {
            "type" : "number"
          },
          "max" : {
            "type" : "number"
          },
          "scale" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          }
        }
      },
      "HiLoStats" : {
        "type" : "object",
        "properties" : {
          "calculatedPrice" : {
            "$ref" : "#/components/schemas/HiLo"
          },
          "calculated" : {
            "$ref" : "#/components/schemas/HiLo"
          },
          "distance" : {
            "$ref" : "#/components/schemas/HiLo"
          },
          "unit" : {
            "$ref" : "#/components/schemas/HiLo"
          },
          "pricePerUnit" : {
            "$ref" : "#/components/schemas/HiLo"
          }
        }
      },
      "LocalDate" : {
        "type" : "string",
        "format" : "date",
        "examples" : [ "2022-03-10" ]
      },
      "MinimalStats" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "number"
          },
          "avgFuelConsumption" : {
            "type" : "number"
          },
          "minMaxFuelConsumption" : {
            "$ref" : "#/components/schemas/HiLo"
          },
          "avgDistance" : {
            "type" : "number"
          }
        }
      },
      "TotalStats" : {
        "type" : "object",
        "properties" : {
          "unit" : {
            "type" : "number"
          },
          "distance" : {
            "type" : "number"
          },
          "calculatedPrice" : {
            "type" : "number"
          }
        }
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "Authentication"
      }
    }
  },
  "paths" : {
    "/api/auth/callback" : {
      "get" : {
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Callback",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/auth/check_login" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Test",
        "tags" : [ "Auth Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/auth/external-login/{method}" : {
      "get" : {
        "description" : "Here should the browser redirect, when 'login to x' is pressed",
        "operationId" : "loginByMethod",
        "parameters" : [ {
          "name" : "method",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Login",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/auth/login" : {
      "post" : {
        "description" : "Here should the browser redirect, when 'login' is pressed",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Login successful"
          },
          "401" : {
            "description" : "No Cookie found or login expired"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Login",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/auth/logout" : {
      "post" : {
        "description" : "Logout current user",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "SESSION_ID",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Logout",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/auth/register" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Register Redirect",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/bill/{carId}" : {
      "put" : {
        "operationId" : "addNewBill",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BillInputPojo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Bill created."
          },
          "400" : {
            "description" : "Car is not for your user."
          },
          "500" : {
            "description" : "Something went wrong while saving. Please ask the server admin for help."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Add New Bill",
        "tags" : [ "Bill Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/bill/{carId}/all" : {
      "get" : {
        "description" : "Gets all bills for specified car",
        "operationId" : "getAllBills",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Bills found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillPojoPaged"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All My Bills",
        "tags" : [ "Bill Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/bill/{carId}/{billId}" : {
      "delete" : {
        "operationId" : "deleteBill",
        "parameters" : [ {
          "name" : "billId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Bill deleted."
          },
          "400" : {
            "description" : "Bill not found on the specified car."
          },
          "500" : {
            "description" : "Something went wrong while deleting. Please ask the server admin for help."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Bill",
        "tags" : [ "Bill Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/car/my" : {
      "get" : {
        "operationId" : "getMyCars",
        "responses" : {
          "200" : {
            "description" : "Get all cars.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CarPojo"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get My Cars",
        "tags" : [ "Car Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "put" : {
        "operationId" : "createCar",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CarInputPojo"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Car created."
          },
          "400" : {
            "description" : "Maximal amount of cars created."
          },
          "500" : {
            "description" : "Something went wrong while saving. Please ask the server admin for help."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Create Car",
        "tags" : [ "Car Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/car/my/{id}" : {
      "get" : {
        "operationId" : "getMyCar",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Car found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CarPojo"
                }
              }
            }
          },
          "204" : {
            "description" : "Id was not found."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get My Car",
        "tags" : [ "Car Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/import/{carId}" : {
      "post" : {
        "description" : "This is the description for the import of an csv of your bills.<br />\n<br />\nYou need to add the csv and optionally the order in the csv (starts with 0).<br />\nIf you're not adding the order, the default is: day, unit, pricePerUnit, distance, estimate\nseparator between columns is ',' (comma)\n",
        "operationId" : "importCsv",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "skipHeader",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  },
                  "order" : {
                    "$ref" : "#/components/schemas/CsvOrder"
                  }
                }
              },
              "encoding" : {
                "file" : {
                  "contentType" : "text/csv"
                },
                "order" : {
                  "contentType" : "application/json"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "CSV was imported."
          },
          "400" : {
            "description" : "- Order is invalid\n- Car not found"
          },
          "500" : {
            "description" : "- CSV was not set\n- Something went wrong while importing. Please ask the server admin for help."
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Import Csv",
        "tags" : [ "Import Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/stats/{carId}/average" : {
      "get" : {
        "description" : "Gets the average stats for Distance/Cost/PricePerUnit/Fuel Consumption",
        "operationId" : "getStatsAverage",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        }, {
          "name" : "to",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AverageStats"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Average",
        "tags" : [ "Stats Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/stats/{carId}/hi_lo" : {
      "get" : {
        "description" : "Gets the highes and lowest stats for Unit/Distance/Cost/PricePerUnit/Fuel Consumption",
        "operationId" : "getStatsHiLo",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        }, {
          "name" : "to",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HiLoStats"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Hi Lo",
        "tags" : [ "Stats Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/stats/{carId}/minimal" : {
      "get" : {
        "description" : "Gets a small amount of stats to show in a dashboard",
        "operationId" : "getStatsMinimal",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        }, {
          "name" : "to",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MinimalStats"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Minimal Stats",
        "tags" : [ "Stats Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/stats/{carId}/total" : {
      "get" : {
        "description" : "Gets the accumulated stats for Unit/Distance/Cost",
        "operationId" : "getStatsTotal",
        "parameters" : [ {
          "name" : "carId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        }, {
          "name" : "to",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TotalStats"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Total",
        "tags" : [ "Stats Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/user/me" : {
      "get" : {
        "operationId" : "getMyself",
        "responses" : {
          "200" : {
            "description" : "User found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountPojo"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Me",
        "tags" : [ "Account Resource" ],
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    }
  },
  "info" : {
    "title" : "car-ledger API",
    "version" : "0.1.0-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:8080",
    "description" : "Auto generated value"
  } ]
}